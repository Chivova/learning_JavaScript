/* Оператор break

Прервать выполнение цикла можно в любой момент.Для этого сущестует оператор break, который полностью прекращает
выполнение цикла и передаёт управление на строку за его телом.

В примере ищем число 3. Как только выполнится условие if, цикл прекратит своё выполнение (будет прерван). */

for (let i = 0; i <= 5; i += 1) {
  console.log(i);

  if (i === 3) {
    console.log('Нашли число 3, прерываем выполнение цикла');
    break;
  }
}

console.log('Лог после цикла');

/* Задание

Дополни код так, чтобы в переменную number записывалось первое число от start до end, которое делится на 5 без остатка. */

const start = 6;
const end = 27;
let number;

for (let i = start; i < end; i += 1) {
  if (i % 5 === 0) {
    number = i;
    break;
    }
}
console.log(`Нашли первое число ${number} которое делится на 5 без остатка`);
/* Тесты
Объявлена переменная start со значением 6.
Объявлена переменная end со значением 27.
Объявлена переменная number без инициализации.
Итоговое значение переменной number равно 10. */

/* Оператор break vs return в функции
Если цикл находится в теле функции, то оператор break не прекращает выполнение функции, а только прервёт цикл.
Для того чтобы прерывать выполнение сразу цикла и функции есть оператор return.

В примере ищем число 3. Как только выполнится условие if, делаем возврат, который прервёт выполнение цикла и функции. */

function fn() {
  for (let i = 0; i <= 5; i += 1) {
    console.log(i);

    if (i === 3) {
      console.log('Нашли число 3, делаем возврат, прерывая цикл и функцию');
      return i;
    }
  }

  // Этот console.log не выполнится
  console.log('Лог после цикла в теле функции');
}

const result = fn();
console.log('Лог после выхода из функции');
console.log(`Результат выполнения функции ${result}`);

/* Задание
Выполни рефакторинг функции findNumber(start, end, divisor) так, чтобы она:
возвращала первое число от start до end, которое делится на divisor без остатка;
не использовала оператор break;
*/

function findNumber(start, end, divisor) {
    console.log(start, end, divisor);
    
  for (let i = start; i < end; i += 1) {
      if (i % divisor === 0) {
        
          return i;
          
      }
      
    }
    
}
    
console.log(findNumber(2, 6, 5));  
console.log(findNumber(8, 17, 3)); 
console.log(findNumber(6, 9, 4));  
console.log(findNumber(16, 35, 7));  
/* Тесты
Объявлена функция findNumber(start, end, divisor).
Вызов findNumber(2, 6, 5) возвращает 5.
Вызов findNumber(8, 17, 3) возвращает 9.
Вызов findNumber(6, 9, 4) возвращает 8.
Вызов findNumber(16, 35, 7) возвращает 21. */