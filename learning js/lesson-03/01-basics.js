/*
 * Знакомство  с массивами
 * - Объявление
 * - Индексация
 * - Длина
 * - Индекс последнего элемента
 * - Переопределение
 *
 * 'Mango', 'Kiwi', 'Poly', 'Ajax'
 */
// Массив это набор ячеек в памяти, сложный тип
//  * - Объявление

const friends = ['Mango', 'Kiwi', 'Poly', 'Ajax'];
// всегда const потому что меняется не сама переменная а массив
// console.log(friends); // через console.log() можно выводить, но лучше через console.table()---> выведет в виде табл с индексом и значением
console.log(friends.length); // свойство length выводит длину массива
console.table(friends);

// индекс массива всегда считантся length - 1;
const lastIndex = friends.length - 1;
console.log(lastIndex); // пример если нужно взять последнее значение в массиве

friends[0]; // если нужно обратится к определенному элементу массива, где friends название переменной(массивва) [index]
console.log(friends[1]); // вывдет Kiwi
console.log(friends[3]); // вывдет Ajax
console.log(friends[4]); //если поставить индекс больше чем елементов, выведет undefined

// Изминение элемента в масиве
// меняется не переменная а массив(изминение кусочка памяти в массиве)
friends[1] = 'Potato';
friends[3] = 1700;
console.table(friends);


/*
 * Передача по ссылке и по значению
 * - Примитивы и сложные типы
 * - Ссылочное равенство (referential equality)
 */

// Передача по значению (приметивный тип - когда идет присвоение литералда строчного, или числа)
// передача по значению - это делается копия, отдельная ячейка в памяти и туда происходит копирывание и при обновлении допустим одной ячейки
// вторая не обновляется автоматически, это копии которые абсолютно друг от друга не зависят
// Что происходит - когда мы делаем переменную а, выделяется место в памяти в которую записываеться значение(в данном случаее 10), можно сказать что переменная и значение лежит в одно ячейке
//  когда делаем переменную b = а, то создается новая ячейка в памяти, в которую делается копия текущего значения (в данном случаее 10)
let a = 10;
const b = a;
console.log(a);
console.log(b);

// Если потом перезаписать переменную а, то в той ячейке памяти где хранится а запишится новое значение, а в переменной b останется старое значение (это копия старого значения),
//     так как это 2 разные ячейки
a = 20;
console.log(a);
console.log(b);

