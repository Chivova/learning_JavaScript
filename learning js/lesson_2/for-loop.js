/*
 * Цикл for
 Циклы - специально управляющая конструкция, которая просто позволяет повторять один и тотже кусочек кода
 с минимальными изминениями
 for (инициализация; условие; пост - выражение) {
            тело цикла
 }
 ----> инициализация (обьявляем счетчик) - начальное значение. Выполняется всего один раз(за жизнь всего цикла 
    перед исполнением)
 ---->  условие - заканчивает цикл, в условии чаще всего используют  < >. Выполняется до тех пор пока не будет false,
 false - останавливат цикл. Если false не будет происходит зацикливание и код за циклом не выполняется.
---->  Когда тело цикла на текущей  итерации 1 раз выполнено, то выполняется пост - выражениее.В пост - выражении можно увеличивать
или уменьшать счетчик, например увеличиваем на 1 i += 1 (i = i + 1), что бы уменьшить значение -= ( например 
    уменьшаем с шагом на 2 i -= 2;)
 */

// for (let i = 0; i < 7; i += 1) { 
//     console.log(i);
// } 

// console.log('Цикл завершил работу');
     
//  переменная let потому что увеличиваем значение + переменная i видна только в теле цикла, так как обьвлянна внуктри
// а не во внешней области видимости

 /*
 * Pre-increment и Post-increment
 a++; a--;  ++a, --a -----> old school, его очень не любят современные линтеры ( инструменты для проверки качества кода)
 значение можно увеличить или уменьшить только на 1
 */

 for (let a = 3; a < 7; a++) { 
    console.log(a);
} 

// a++ - post - increment, увиличивает значение после выражения, после  того как выполнится оператор =
 
// let a = 10;
// const b = a++;
// console.log(a); // будет 11
// console.log(b);//  все еще будет 10, так как значение а будет увиличено после того как выполнится = (выражение присваивания)

// a-- - pre - increment, увиличивает значение до выражения 
// let a = 10;
// const b = a++;
// console.log(a); // будет 11
// console.log(b); // будет 11, так как сначала произойдет увиличение а на 1 и запишится в переменную b

/*
 * Pre-increment и Post-increment - это гадость!!!!!! лучше привыкать и  использовать а += 1; а -= 1;
 */









 