/*
 * –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
 */

// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder = function (number, places) {
//     return Number(number.toFixed(places));
// };

// console.log(rounder(3.4567, 2));
// console.log(rounder(3.4567, 3));
// console.log(rounder(5.1234, 2));
// console.log(rounder(3.4567, 3));

const rounder = function (plases) {
  return function (number) {
    return Number(number.toFixed(plases));
  };
};

const rounder1 = rounder(1);
const rounder2 = rounder(2);

// console.dir(rounder1);
// console.dir(rounder2);

console.log(rounder1(3.45));
console.log(rounder2(4.579));
console.log(rounder1(2.143));
console.log(rounder2(7.8762));
console.log(rounder1(3.332));
console.log(rounder2(10.14987));

/*
 * –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - —Å–∫—Ä—ã—Ç–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

// const myLibFactory = function () {
//     let value = 0;

//     const add = function (num) {
//         value += num;
//     };

//     return {
//         add, —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å –∏–±–æ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ
//         getValue() {
//             return value;
//         },
//     };
// };

// const myLib = myLibFactory();

// console.dir(myLib.getValue);

// console.log(myLib);
// console.log(myLib.getValue());
// myLib.add(10);

const salaryManagerFactory = function (employeeName, baseSalary = 0) {
  let salary = baseSalary; // --> –ø—Ä–∏–≤–∞—Ç–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—É–ø(–Ω–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä—è–º—É—é, —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã
  //   –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏, –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞)

  return {
    raise(amount) {
      if (amount > 1000) {
        return "–¢—ã –æ—Ñ–∏–≥–µ–ª?";
      }

      salary += amount;
    },
    lower(amount) {
      salary -= amount;
    },
    current() {
      return `–¢–µ–∫—É—â–∞—è –∑–∞—Ä–ø–∞–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
    },
  };
};

const salaryManager = salaryManagerFactory("Mango", 5000);

console.log(salaryManager.current());

console.log(salaryManager.raise(10000000));

console.log(salaryManager.current());
